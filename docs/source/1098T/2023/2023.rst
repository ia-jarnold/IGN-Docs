=====================
2023 1098t Procedures
=====================

* | `1098t Ellucian Walkthrough`_ - for similar but more general procedure info.
* | :redbold:`The actual deadline for a TRA submission is January 19th.` Can see this in the documents in the web portal.

2023 1098t Procedure 0
======================

| Ensure the newest 1098T updates have been installed to colleague. See... `1098t Ellucian Releases`_ for newest updates usually come out around Nov/Dec of reporting period.

| Verify the institution info in :ref:`ORGP`/:ref:`AORG`/:ref:`PID2` I have found it is mostly the same and correct :orangebold:`there are two entries in ORGP`.

* | :ref:`ORGP`- Enter "Lake Tahoe..." - There is an entry for the District and for the Institution. The 0000375 code is the most common and in the 1098T work ID. Also choose the Address that is well formed, /top of the list. Pretty much make sure this contact info is up to date I verified through google phone number etc...

* | :ref:`AORG` - Enter "Lake Tahoe..." - FICE num is pretty common and recognizable from :ref:`Student Tracker` results. The EIN can be verified on previous submissions in TRA. Note...The LTCC Foundation is not the same as LTCC EIN.

* | :ref:`PID2` - Not to sure on this one but nothing odd.


2023 1098t Procedure 1
======================

| Consider printing options if supplying students with there own physical pdfs not the ones provied by the colleague ui to download, these will be turned on for student to collect after the IRS.

* :ref:`T9TF`

| Does not look like much was done here for 2023 :redbold:`confusing but this submission is 2024.`

2023 1098t Procedure 2
======================

| Backup last years data locally. Again confusing years. We are backing up 2023 from colleague work file to 2022 table. and starting 2024 in colleague. could back up to 2023 here as well but may just make it more confusing.

.. dropdown:: 1098t Backup

   .. code-block:: SQL

         -- will show not exists until the below two inserts are done.
         SELECT *
         FROM ltcc.dbo.AR_1098T_BOXES_WORK_2022

         SELECT *
         FROM ltcc.dbo.AR_1098T_WORK_2022

         SELECT *
         INTO ltcc.dbo.AR_1098T_BOXES_WORK_2022
         FROM AR_1098T_BOXES_WORK


         SELECT *
         INTO ltcc.dbo.AR_1098T_WORK_2022
         FROM AR_1098T_WORK



2023 1098t Procedure 3
======================

| Verify Status and Purge the workfiles

* :ref:`T9TC` for status. Status should be unfrozen for purge. Change Status -> Y
* :ref:`T9TP` for purge. We do not purge the tax year repo but change purge to Y.

| Work files should be empty now.

.. dropdown:: 1098t Work Files

   .. code-block:: SQL

      SELECT *
      FROM AR_1098T_BOXES_WORK


      SELECT *
      FROM AR_1098T_WORK

2023 1098t Procedure 4
======================

| This is prob the only sketchy area of 1098t. The 198t official instuctions say BOX 2 is for future purposes. Possibly for things like this.

| Check out the CORE :ref:`VAL`.TAX.FORMS.

| Review the 1098t box codes :ref:`TFBX`. This term I ensured the 1098t boxes still map roughly to the explanations in  `2023 1098t Instructions`_ . They look correct. There is a 2024 doc but it looks the same in this area and not an official release at the moment.

* | :orangebold:`One thing to note is that I see a Box 2 Code TUI but 1098T no longer supports box two so keep an eye on this. But Ferelli set the Fee waivers to this box. So...going to keep it the same...`

| Review AR codes...:ref:`ARCT`...it appears to map ltcc fee waivers to box 2 for calculation. This term Michael and I were looking at the new loan awards also. I found that they may be reported in 1098-E. But may ask TRA this when we start to submit.

| current fee waivers.

* WRSEN
* WNRTU
* WHLTF
* LTP
* LTPHF

| :orangebold:`The Detail report will show how box 2's are handeled but the analytical report will show they eventually collapse into Box 1 Tuition...`

2023 1098t Procedure 5
======================

| Set up or review the defaults and parameters used for 1098-T reporting using the 1098-T Defaults/Parameters (T9TD) form. See `1098t Ellucian Walkthrough`_ for more information.

| Change the Tax Year to the the current in 2024 it is tax year 2023.

.. image:: /_static/img/1098T/T9TD.png
   :alt: 1098T Folder
   :align: center

| :orangebold:`Update the years appropriately in the enroll dates aka plus 1 I am currently not sure of the specifics here but it does match what dave did historically. Also note the field help mentions that this defines the dates a student must be enrolled to receive a 1098t which is also what the savelist determines`


|  :orangebold:`This year we will will be providing the students with 1098t's through webadvisor. After they have been submitted to the IRS. This may require corrections to be made in colleague this year.` This will involve steps in :ref:`T9TY`. Drill into :ref:`T9TY` for the selected year(2023) and enter Yes so that web advisor pdf's are available.

| :orangebold:`Adding a webadvisor pdf will require information in the 3 consent fields on` :ref:`T9TD`


2023 1098t Procedure 6
======================

| Run :ref:`T9TG` with the following savelist named 1098T_2023.

* Excl Students when scholarships Equal Tuition -> No # can play with this one but I beleive it should be off. some JPA students had these but very few.
* Certify TIN -> Yes -- TRA will do this also free of charge.

.. dropdown:: T9TG Savelist
   :color: warning

   | Cauptures any student that has made a payment, received a payment, or Enrolled thre terms prior to report start term. Interestion why we only consider 2023SU -> 2024SP Fa records but...

   .. code-block:: sql

      SELECT DISTINCT t.ID
      FROM (

              SELECT DISTINCT LEFT(FA.TA_2023_ID,7) AS [ID]
              FROM [TA_2023] FA
              WHERE YEAR(FA.TA_TERM_XMIT_DT) = '2023' and (TA_TERM_XMIT_AMT IS NOT NULL OR TA_TERM_XMIT_AMT > 0)

              UNION

              SELECT DISTINCT PYMT.ARP_PERSON_ID AS [ID]
              FROM AR_PAYMENTS PYMT
              WHERE YEAR(PYMT.ARP_DATE) ='2023' and (ARP_AMT IS NOT NULL or ARP_AMT > 0 )

              UNION

              SELECT DISTINCT STC.STC_PERSON_ID  AS [ID]
              FROM STUDENT_ACAD_CRED STC
              WHERE STC.STC_TERM IN ('2022FA', '2023WI', '2023SP', '2023SU', '2023FA' , '2024WI' , '2024SP')

          ) AS t
          LEFT JOIN PERSON p ON p.ID = t.ID

      WHERE ( p.PERSON_CORP_INDICATOR <> 'Y'
              OR p.PERSON_CORP_INDICATOR IS NULL ) -- coporate records will throw T9TG error...
      ORDER BY t.ID


| :orangebold:`Be sure to look at at least a few of the Coporate Indicators.` :ref:`T9TG` :orangebold:`will not even allow a savelist to be entered with these in there.`

| At this point need to get the test submission into TRA so that those errors can be considered with the following reports.

| :redbold:`Save the ssn and address errors for reference. If there are errors usually about missing address info fix these if possible and re-run they would be corrections down stream should also get a tester in to tra`

2023 1098t Procedure 8
======================

| Run T9TA to generate the analytics report with a savelist derived from the work table..Notice that there is no Box 2 here. since Box 2 TUI and Box 1 TUP were combined into box 1 TUP in :ref:`T9TA`.

| :orangebold:`Elizabeth Balint mentioned that JPA students should possibly not be included but there is no official procedure I am seeing for this and not including students could cause more issues then not. The enrollment query will pull jpa and is very loose in that it just checks for a record. Once QTRE is calculated will see if JPA made payments`

2023 1098t Procedure 7
======================

| Run T9TR to generate the detail report. witha save list derived from the Work table.
| This report will show the break down of ar codes and how they are calculated in each box.

2023 1098t Procedure 8
======================

| These two queries list records with no box info at all and no accountable(money) box info. Box should never have QTRE > than QTRE carry over.

.. dropdown:: Students with no Box info SQL
   :color: info

   .. code-block:: SQL

      SELECT * -- DISTINCT LEFT(aw.AR_1098T_WORK_ID, 7)
      FROM AR_1098T_WORK aw
           LEFT JOIN AR_1098T_BOXES_WORK abw ON LEFT(aw.AR_1098T_WORK_ID, 7) = LEFT(abw.AR_1098T_BOXES_WORK_ID, 7)
      WHERE LEFT(abw.AR_1098T_BOXES_WORK_ID, 7) IS NULL
            AND aw.T98T_QTRE_2018_CARRYOVR < aw.T98T_QTRE -- should not exist

            -- cross reference enrollment
            /***AND EXISTS (
                SELECT *
                FROM STUDENT_ACAD_CRED sac
                     INNER JOIN STC_STATUSES ss        ON ss.STUDENT_ACAD_CRED_ID = sac.STUDENT_ACAD_CRED_ID
                                                          AND ss.POS = 1
                     INNER JOIN STUDENT_COURSE_SEC scs ON scs.SCS_STUDENT_ACAD_CRED = sac.STUDENT_ACAD_CRED_ID
                     INNER JOIN COURSE_SECTIONS cs     ON scs.SCS_COURSE_SECTION = cs.COURSE_SECTIONS_ID
                     INNER JOIN COURSES c              ON sac.STC_COURSE = c.COURSES_ID
                WHERE cs.SEC_TERM IN ('2022WI', '2022SP', '2022SU', '2022FA')
                      AND sac.STC_PERSON_ID = LEFT(aw.AR_1098T_WORK_ID, 7)
                      AND (ss.STC_STATUS IN ('A','NR') OR sac.STC_VERIFIED_GRADE IN ('13', '56'))
            )***/

.. dropdown:: Students with empty box info SQL
   :color: info

   .. code-block:: SQL

      SELECT * --DISTINCT LEFT(aw.AR_1098T_WORK_ID, 7)
      FROM AR_1098T_WORK aw
           --INNER JOIN AR_1098T_BOXES_WORK abw ON LEFT(aw.AR_1098T_WORK_ID, 7) = LEFT(abw.AR_1098T_BOXES_WORK_ID, 7)
      WHERE NOT EXISTS (

          SELECT *
          FROM AR_1098T_BOXES_WORK abw
          WHERE LEFT(aw.AR_1098T_WORK_ID, 7) = LEFT(abw.AR_1098T_BOXES_WORK_ID, 7)
                AND (RIGHT(abw.AR_1098T_BOXES_WORK_ID, 3) = 'SCH'
                     OR RIGHT(abw.AR_1098T_BOXES_WORK_ID, 3) = 'TUP'
                     OR  RIGHT(abw.AR_1098T_BOXES_WORK_ID, 3) = 'PYA')
           ) AND EXISTS (

          SELECT *
          FROM AR_1098T_BOXES_WORK abw
          WHERE LEFT(aw.AR_1098T_WORK_ID, 7) = LEFT(abw.AR_1098T_BOXES_WORK_ID, 7)
                AND RIGHT(abw.AR_1098T_BOXES_WORK_ID, 3) = 'LOD'
                AND (
                     (abw.T98TB_VALUE = 'X' AND abw.T98TB_CALC_VALUE = 'X') -- two subsets of LOD in empty boxes.
                     OR
                     (abw.T98TB_VALUE IS NULL AND abw.T98TB_CALC_VALUE IS NULL)
                    )
          ) AND aw.T98T_QTRE_2018_CARRYOVR < aw.T98T_QTRE

      /***AND EXISTS (
                SELECT *
                FROM STUDENT_ACAD_CRED sac
                     INNER JOIN STC_STATUSES ss        ON ss.STUDENT_ACAD_CRED_ID = sac.STUDENT_ACAD_CRED_ID
                                                          AND ss.POS = 1
                     INNER JOIN STUDENT_COURSE_SEC scs ON scs.SCS_STUDENT_ACAD_CRED = sac.STUDENT_ACAD_CRED_ID
                     INNER JOIN COURSE_SECTIONS cs     ON scs.SCS_COURSE_SECTION = cs.COURSE_SECTIONS_ID
                     INNER JOIN COURSES c              ON sac.STC_COURSE = c.COURSES_ID
                WHERE cs.SEC_TERM IN ('2022WI', '2022SP', '2022SU', '2022FA')
                      AND sac.STC_PERSON_ID = LEFT(aw.AR_1098T_WORK_ID, 7)
                      AND (ss.STC_STATUS IN ('A','NR') OR sac.STC_VERIFIED_GRADE IN ('13', '56'))
          )***/


| :redbold:`Good to check some of the fatal errors from` :ref:`T9TG` :redbold:`if they fall into these I don't believe there 1098T will be generated and we don't have to worry about corrections. Especially the address errors those may be corrections`

| :redbold:`Also try to check to make sure they don't get 1098T exports`

2023 1098t Procedure 11
=======================

| Next step while we still use TRA is to get them a test file similar to an MIS test submission they will check for any actual reporting errors that need corrections etc. They wiil generate an error summary which can be compared to our previous submissions to them in their web portal. This also generates a file to check who gets actual 1098t info reported to the IRS. This step is reachout based so get it moving and have a file but can do more checks once it is moving.

| :orangebold:`Last year applying a savelist to the export didn't do anything. Will check that again but making TRA the priority for now`.

* Use :ref:`T9TC` to Freeze the work file for export. :orangebold:`This process takes a bit.`
* Use :ref:`T9TM` to Export. -- note this process does not send to the IRS directly sometimes the docs infer that though. Showed 57 ish missing TIN errors for students but TRA looks these up for us again free of charge.

* The export files end up in \\ltcc-app\apphome\FINANCIAL.EXPORTS\T9TM_..._... and are archived in Standard IE Procedures\1098T\Media_Files\...

* :greenbold:`The Export file has the SSN's and the Colleague ID's in the second column. I would take this and create a 2 col csv file(SSN,ID). This can really help with analysis through out the year. I used import data wizard in mssql to upload these to the L56_1098T_T9TM_IDS table`


.. dropdown:: Students with empty box info SQL
   :color: info

   .. code-block:: SQL

      /***
      SET ANSI_NULLS ON
      GO

      SET QUOTED_IDENTIFIER ON
      GO

      CREATE TABLE [dbo].[L56_1098T_T9TM_IDS](
        [T9_SSN] [VARCHAR](9) NULL,
        [T9_ID] [VARCHAR](7) NULL
      )
      ***/

      SELECT *
      FROM L56_1098T_T9TM_IDS

      UPDATE t9
      SET t9.T9_SSN = NULL
      FROM L56_1098T_T9TM_IDS t9
      WHERE t9.T9_SSN = ''

      TRUNCATE L56_1098T_T9TM_IDS -- wizard can do this too but no term/year/date info is kept atm.

      SELECT *
      FROM L56_1098T_T9TM_IDS tm
           LEFT JOIN AR_1098T_WORK aw ON tm.T9_ID = LEFT(aw.AR_1098T_WORK_ID, 7)
           LEFT JOIN AR_1098T_BOXES_WORK abw ON LEFT(aw.AR_1098T_WORK_ID, 7) = LEFT(abw.AR_1098T_BOXES_WORK_ID, 7)

      -- These are the interesting ones from the export...
      -- They are mainly SCH boxes or PYA aka stuff that had QTRE Carry over from the previous year.
      -- Some just had Carry over two years in a row and a portion of it was put in box 1 as reporable.
      -- really good id to explain double carry over and how the diff in carry over becomes box 1 -- 0671261 aka PYA BOX and carry over this year.
      SELECT * --DISTINCT tm.T9_ID
      FROM L56_1098T_T9TM_IDS tm
           FULL JOIN (
               SELECT *
               FROM AR_1098T_WORK aw
                    LEFT JOIN AR_1098T_BOXES_WORK abw ON LEFT(aw.AR_1098T_WORK_ID, 7) = LEFT(abw.AR_1098T_BOXES_WORK_ID, 7)
           ) AS t9w ON tm.T9_ID = LEFT(t9w.AR_1098T_WORK_ID, 7)
      WHERE tm.T9_ID IS NOT NULL
            AND t9w.T98T_QTRE <= t9w.T98T_QTRE_CARRYOVER


2023 1098t Procedure 12
=======================

| The test submission came back with no errors. but warnings as usual. Can find it under TRA_summary under this years archive in the docs. Below is last years prod submission summary versus this years test and nothing stands out. We had a lot less blank SSN's this year even with a higher count.

.. image:: /_static/img/1098T/TRA_summary_22_23.png
   :alt: 1098T Folder
   :align: center

2023 1098t Procedure 13
=======================

.. dropdown:: Box 1 = Box 5 AND JPA X 1098T

   * 210 with Box 1 = Box 5
   * 146 JPA with Reportable Box 1
   * 143 JPA with with 1 = 5
   * Any JPA with 0 QTRE/QTRE Carryover for this term will show Prior Year Adjustments ~200$ in the Detail report.....Caryover from last year.
   * Notice the students with the 200$ Carryover for this year...

   | These are all valid box combos so no reason tax wise to remove anything here.

   .. code-block:: SQL

      SELECT *
      SELECT DISTINCT tm.T9_ID
      FROM L56_1098T_T9TM_IDS tm -- in export
           FULL JOIN (

              SELECT * -- 1098t work records
              FROM AR_1098T_WORK aw
                   LEFT JOIN AR_1098T_BOXES_WORK abw ON LEFT(aw.AR_1098T_WORK_ID, 7) = LEFT(abw.AR_1098T_BOXES_WORK_ID, 7)

           ) AS t9w ON tm.T9_ID = LEFT(t9w.AR_1098T_WORK_ID, 7)

      WHERE tm.T9_ID IS NOT NULL

            AND EXISTS ( -- Box 1 = 5

               SELECT *
               FROM AR_1098T_BOXES_WORK abw1
                    INNER JOIN AR_1098T_BOXES_WORK abw2 ON LEFT(abw1.AR_1098T_BOXES_WORK_ID, 7) = LEFT(abw2.AR_1098T_BOXES_WORK_ID, 7)
               WHERE LEFT(t9w.AR_1098T_WORK_ID, 7)      = LEFT(abw1.AR_1098T_BOXES_WORK_ID, 7)
                     AND LEFT(t9w.AR_1098T_WORK_ID, 7)  = LEFT(abw2.AR_1098T_BOXES_WORK_ID, 7)
                     AND RIGHT(abw1.AR_1098T_BOXES_WORK_ID, 3) = 'TUP'
                     AND RIGHT(abw2.AR_1098T_BOXES_WORK_ID, 3) = 'SCH'
                     AND abw1.T98TB_CALC_AMT = abw2.T98TB_CALC_AMT

            )

            AND EXISTS ( -- JPA

               SELECT *
               FROM STUDENT_ACAD_CRED sac
                    LEFT JOIN STC_STATUSES ss ON sac.STUDENT_ACAD_CRED_ID = ss.STUDENT_ACAD_CRED_ID
                                                 AND ss.POS = 1
               WHERE sac.STC_PERSON_ID = LEFT(t9w.AR_1098T_WORK_ID, 7)
                     AND sac.STC_TERM IN ('2023WI', '2023SP', '2023SU', '2023FA') -- can extend this maybe
                     AND (ss.STC_STATUS IN ('A','NR') OR sac.STC_VERIFIED_GRADE IN ('13','56'))
                     AND LEFT(sac.STC_SECTION_NO, 1) = 'Z'
            )
       ORDER BY tm.T9_ID

| in the end they charge .98, ~1 dollar per mailed 1098t. this setting would remove only 200$ from the total potentially. :redbold:`Is that worth missing federal reporitng guidelines, I don't think so but...`

2023 Other
==========

| Can verify individual combos with the T9TR/T9TA reports. Most of the time the QTRE vs QTRE carryover is the determining factor.

.. dropdown:: Combinations of Boxes SQL
   :color: info

   .. code-block:: SQL

      SELECT
      LEFT(W.AR_1098T_WORK_ID, 7) ID, W.T98T_STUDENT_NAME NAME,
      SUM(CASE WHEN RIGHT(B.AR_1098T_BOXES_WORK_ID, 3) = 'TUP' THEN B.T98TB_AMT ELSE 0.0 END) TUP,
      SUM(CASE WHEN RIGHT(B.AR_1098T_BOXES_WORK_ID, 3) = 'PYS' THEN B.T98TB_AMT ELSE 0.0 END) PYS,
      SUM(CASE WHEN RIGHT(B.AR_1098T_BOXES_WORK_ID, 3) = 'PYA' THEN B.T98TB_AMT ELSE 0.0 END) PYA,
      SUM(CASE WHEN RIGHT(B.AR_1098T_BOXES_WORK_ID, 3) = 'SCH' THEN B.T98TB_AMT ELSE 0.0 END) SCH,
      SUM(CASE WHEN RIGHT(B.AR_1098T_BOXES_WORK_ID, 3) = 'LOD' THEN B.T98TB_AMT ELSE 0.0 END) LOD,
      SUM(CASE WHEN RIGHT(B.AR_1098T_BOXES_WORK_ID, 3) = 'GSB' THEN B.T98TB_AMT ELSE 0.0 END) GSB,
      SUM(CASE WHEN RIGHT(B.AR_1098T_BOXES_WORK_ID, 3) = 'TJM' THEN B.T98TB_AMT ELSE 0.0 END) TJM,
      SUM(CASE WHEN RIGHT(B.AR_1098T_BOXES_WORK_ID, 3) = 'SSC' THEN B.T98TB_AMT ELSE 0.0 END) SSC,
      MAX(CASE WHEN RIGHT(B.AR_1098T_BOXES_WORK_ID, 3) = 'TUP' AND B.T98TB_AMT > 0 THEN 'Y' END) TUP_FLAG,
      MAX(CASE WHEN RIGHT(B.AR_1098T_BOXES_WORK_ID, 3) = 'PYS' AND B.T98TB_AMT > 0 THEN 'Y' END) PYS_FLAG,
      MAX(CASE WHEN RIGHT(B.AR_1098T_BOXES_WORK_ID, 3) = 'PYA' AND B.T98TB_AMT > 0 THEN 'Y' END) PYA_FLAG,
      MAX(CASE WHEN RIGHT(B.AR_1098T_BOXES_WORK_ID, 3) = 'SCH' AND B.T98TB_AMT > 0 THEN 'Y' END) SCH_FLAG,
      MAX(CASE WHEN RIGHT(B.AR_1098T_BOXES_WORK_ID, 3) = 'LOD' AND B.T98TB_AMT > 0 THEN 'Y' END) LOD_FLAG,
      MAX(CASE WHEN RIGHT(B.AR_1098T_BOXES_WORK_ID, 3) = 'GSB' AND B.T98TB_AMT > 0 THEN 'Y' END) GSB_FLAG,
      MAX(CASE WHEN RIGHT(B.AR_1098T_BOXES_WORK_ID, 3) = 'TJM' AND B.T98TB_AMT > 0 THEN 'Y' END) TJM_FLAG,
      MAX(CASE WHEN RIGHT(B.AR_1098T_BOXES_WORK_ID, 3) = 'SSC' AND B.T98TB_AMT > 0 THEN 'Y' END) SSC_FLAG,
      NEWID() RANDOM_ID


      INTO #RAWDATA

      FROM AR_1098T_WORK W INNER JOIN
      AR_1098T_BOXES_WORK B ON LEFT(W.AR_1098T_WORK_ID, 7) = LEFT(B.AR_1098T_BOXES_WORK_ID, 7)

      GROUP BY LEFT(W.AR_1098T_WORK_ID, 7), W.T98T_STUDENT_NAME

      SELECT
      RD.ID,
      RD.NAME,
      RD.TUP,
      RD.PYS,
      RD.PYA,
      RD.SCH,
      RD.LOD,
      RD.GSB,
      RD.TJM,
      RD.SSC,
      W.T98T_QTRE,
      W.T98T_QTRE_CARRYOVER


      FROM
      #RAWDATA RD INNER JOIN
      (
      SELECT TUP_FLAG, PYS_FLAG, PYA_FLAG, SCH_FLAG, LOD_FLAG, GSB_FLAG, TJM_FLAG, SSC_FLAG, CAST(MAX(CAST(RANDOM_ID AS VARCHAR(MAX))) AS UNIQUEIDENTIFIER) SELECTED_RECORD
      FROM #RAWDATA
      GROUP BY TUP_FLAG, PYS_FLAG, PYA_FLAG, SCH_FLAG, LOD_FLAG, GSB_FLAG, TJM_FLAG, SSC_FLAG
      ) RANDOM_SAMPLE ON RD.RANDOM_ID = RANDOM_SAMPLE.SELECTED_RECORD
      INNER JOIN  AR_1098T_WORK W ON RD.ID = LEFT(W.AR_1098T_WORK_ID, 7)
      ORDER BY
      RD.TUP,
      RD.PYS,
      RD.SCH,
      RD.PYA,
      RD.LOD,
      RD.GSB,
      RD.TJM,
      RD.SSC

      DROP TABLE #RAWDATA
